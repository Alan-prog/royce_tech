swagger: "2.0"
info:
  description: "This is a sample server RoyceTech server."
  version: "1.0.0"
  title: "Swagger Royce Tech"
host: "46.148.227.164:8080"
schemes:
  - "http"
paths:
  /royce/alive:
    get:
      tags:
        - "Alive"
      summary: "Checking the liveness of service"
      description: ""
      operationId: "findPetsByStatus"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/AliveResponse"
        "500":
          description: "Service is unavailable"
  /royce/create/user:
    post:
      tags:
        - "CreateUser"
      summary: "Add a new user to the store"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User data that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/CreateUserRequest"
      responses:
        "200":
          description: "Adding was successfull"
          schema:
            $ref: "#/definitions/SingleUser"
        "400":
          description: "Bad date format"
          schema:
            $ref: "#/definitions/ErrMessage"
  /royce/user/all:
    get:
      tags:
        - "GetAllUser"
      summary: "Getting all users from the store"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Getting was successfull"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/SingleUser"
        "500":
          description: "Server error"
          schema:
            $ref: "#/definitions/ErrMessage"
  /royce/user:
    put:
      tags:
        - "UpdateUserData"
      summary: "Update an existing pet"
      description: ""
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Fields that should be changed"
          required: true
          schema:
            $ref: "#/definitions/UpdateRequest"
      responses:
        "200":
          description: "Updating was successfull"
          schema:
            $ref: "#/definitions/SingleUser"
        "400":
          description: "Bad date format"
          schema:
            $ref: "#/definitions/ErrMessage"
    get:
      tags:
        - "GetUserData"
      summary: "Get single user data by user id"
      description: ""
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          type: "integer"
          required: true
          description: "id of the person need to get"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#/definitions/SingleUser"
        "400":
          description: "No user in store with such id"
          schema:
            $ref: "#/definitions/ErrMessage"
    delete:
      tags:
        - "DeleteUserData"
      summary: "Delete user data by user id"
      description: ""
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          type: "integer"
          required: true
          description: "id of the person need to delete"
      responses:
        "200":
          description: "OK"
        "500":
          description: "Server error"
          schema:
            $ref: "#/definitions/ErrMessage"

definitions:
  AliveResponse:
    type: "object"
    properties:
      text:
        type: "string"
        example: "service is okay"
        description: "pet status in the store"
  CreateUserRequest:
    type: "object"
    properties:
      name:
        type: "string"
        example: "Alan Kochiev"
        description: "Some"
      dob:
        type: "string"
        example: "2000-01-25"
      address:
        type: "string"
        example: "Steet Name"
      description:
        type: "string"
        example: "Some description"
  SingleUser:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: "3"
      name:
        type: "string"
        example: "Alan Kochiev"
      dob:
        type: "string"
        example: "2000-01-25"
      address:
        type: "string"
        example: "Steet Name"
      description:
        type: "string"
        example: "Some description"
      createAt:
        type: "string"
      updatedAt:
        type: "string"
  ErrMessage:
    type: "object"
    properties:
      err:
        type: "string"
      humanText:
        type: "string"
      code:
        type: "integer"
        format: "int32"
  UpdateRequest:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        example: "3"
      name:
        type: "string"
        example: "Alan Kochiev"
      dob:
        type: "string"
        example: "2000-01-25"
      address:
        type: "string"
        example: "Steet Name"
      description:
        type: "string"
        example: "Some description"